package fr.imtatlantique.projet23.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class DataExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table data_table
     *
     * @mbg.generated Sun Dec 06 16:12:51 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table data_table
     *
     * @mbg.generated Sun Dec 06 16:12:51 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table data_table
     *
     * @mbg.generated Sun Dec 06 16:12:51 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_table
     *
     * @mbg.generated Sun Dec 06 16:12:51 CST 2020
     */
    public DataExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_table
     *
     * @mbg.generated Sun Dec 06 16:12:51 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_table
     *
     * @mbg.generated Sun Dec 06 16:12:51 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_table
     *
     * @mbg.generated Sun Dec 06 16:12:51 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_table
     *
     * @mbg.generated Sun Dec 06 16:12:51 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_table
     *
     * @mbg.generated Sun Dec 06 16:12:51 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_table
     *
     * @mbg.generated Sun Dec 06 16:12:51 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_table
     *
     * @mbg.generated Sun Dec 06 16:12:51 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_table
     *
     * @mbg.generated Sun Dec 06 16:12:51 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_table
     *
     * @mbg.generated Sun Dec 06 16:12:51 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_table
     *
     * @mbg.generated Sun Dec 06 16:12:51 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table data_table
     *
     * @mbg.generated Sun Dec 06 16:12:51 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andDateIsNull() {
            addCriterion("date is null");
            return (Criteria) this;
        }

        public Criteria andDateIsNotNull() {
            addCriterion("date is not null");
            return (Criteria) this;
        }

        public Criteria andDateEqualTo(Date value) {
            addCriterionForJDBCDate("date =", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("date <>", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateGreaterThan(Date value) {
            addCriterionForJDBCDate("date >", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("date >=", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLessThan(Date value) {
            addCriterionForJDBCDate("date <", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("date <=", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateIn(List<Date> values) {
            addCriterionForJDBCDate("date in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("date not in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("date between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("date not between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andLochIsNull() {
            addCriterion("loch is null");
            return (Criteria) this;
        }

        public Criteria andLochIsNotNull() {
            addCriterion("loch is not null");
            return (Criteria) this;
        }

        public Criteria andLochEqualTo(Double value) {
            addCriterion("loch =", value, "loch");
            return (Criteria) this;
        }

        public Criteria andLochNotEqualTo(Double value) {
            addCriterion("loch <>", value, "loch");
            return (Criteria) this;
        }

        public Criteria andLochGreaterThan(Double value) {
            addCriterion("loch >", value, "loch");
            return (Criteria) this;
        }

        public Criteria andLochGreaterThanOrEqualTo(Double value) {
            addCriterion("loch >=", value, "loch");
            return (Criteria) this;
        }

        public Criteria andLochLessThan(Double value) {
            addCriterion("loch <", value, "loch");
            return (Criteria) this;
        }

        public Criteria andLochLessThanOrEqualTo(Double value) {
            addCriterion("loch <=", value, "loch");
            return (Criteria) this;
        }

        public Criteria andLochIn(List<Double> values) {
            addCriterion("loch in", values, "loch");
            return (Criteria) this;
        }

        public Criteria andLochNotIn(List<Double> values) {
            addCriterion("loch not in", values, "loch");
            return (Criteria) this;
        }

        public Criteria andLochBetween(Double value1, Double value2) {
            addCriterion("loch between", value1, value2, "loch");
            return (Criteria) this;
        }

        public Criteria andLochNotBetween(Double value1, Double value2) {
            addCriterion("loch not between", value1, value2, "loch");
            return (Criteria) this;
        }

        public Criteria andLatitudeIsNull() {
            addCriterion("latitude is null");
            return (Criteria) this;
        }

        public Criteria andLatitudeIsNotNull() {
            addCriterion("latitude is not null");
            return (Criteria) this;
        }

        public Criteria andLatitudeEqualTo(Double value) {
            addCriterion("latitude =", value, "latitude");
            return (Criteria) this;
        }

        public Criteria andLatitudeNotEqualTo(Double value) {
            addCriterion("latitude <>", value, "latitude");
            return (Criteria) this;
        }

        public Criteria andLatitudeGreaterThan(Double value) {
            addCriterion("latitude >", value, "latitude");
            return (Criteria) this;
        }

        public Criteria andLatitudeGreaterThanOrEqualTo(Double value) {
            addCriterion("latitude >=", value, "latitude");
            return (Criteria) this;
        }

        public Criteria andLatitudeLessThan(Double value) {
            addCriterion("latitude <", value, "latitude");
            return (Criteria) this;
        }

        public Criteria andLatitudeLessThanOrEqualTo(Double value) {
            addCriterion("latitude <=", value, "latitude");
            return (Criteria) this;
        }

        public Criteria andLatitudeIn(List<Double> values) {
            addCriterion("latitude in", values, "latitude");
            return (Criteria) this;
        }

        public Criteria andLatitudeNotIn(List<Double> values) {
            addCriterion("latitude not in", values, "latitude");
            return (Criteria) this;
        }

        public Criteria andLatitudeBetween(Double value1, Double value2) {
            addCriterion("latitude between", value1, value2, "latitude");
            return (Criteria) this;
        }

        public Criteria andLatitudeNotBetween(Double value1, Double value2) {
            addCriterion("latitude not between", value1, value2, "latitude");
            return (Criteria) this;
        }

        public Criteria andLongitudeIsNull() {
            addCriterion("longitude is null");
            return (Criteria) this;
        }

        public Criteria andLongitudeIsNotNull() {
            addCriterion("longitude is not null");
            return (Criteria) this;
        }

        public Criteria andLongitudeEqualTo(Double value) {
            addCriterion("longitude =", value, "longitude");
            return (Criteria) this;
        }

        public Criteria andLongitudeNotEqualTo(Double value) {
            addCriterion("longitude <>", value, "longitude");
            return (Criteria) this;
        }

        public Criteria andLongitudeGreaterThan(Double value) {
            addCriterion("longitude >", value, "longitude");
            return (Criteria) this;
        }

        public Criteria andLongitudeGreaterThanOrEqualTo(Double value) {
            addCriterion("longitude >=", value, "longitude");
            return (Criteria) this;
        }

        public Criteria andLongitudeLessThan(Double value) {
            addCriterion("longitude <", value, "longitude");
            return (Criteria) this;
        }

        public Criteria andLongitudeLessThanOrEqualTo(Double value) {
            addCriterion("longitude <=", value, "longitude");
            return (Criteria) this;
        }

        public Criteria andLongitudeIn(List<Double> values) {
            addCriterion("longitude in", values, "longitude");
            return (Criteria) this;
        }

        public Criteria andLongitudeNotIn(List<Double> values) {
            addCriterion("longitude not in", values, "longitude");
            return (Criteria) this;
        }

        public Criteria andLongitudeBetween(Double value1, Double value2) {
            addCriterion("longitude between", value1, value2, "longitude");
            return (Criteria) this;
        }

        public Criteria andLongitudeNotBetween(Double value1, Double value2) {
            addCriterion("longitude not between", value1, value2, "longitude");
            return (Criteria) this;
        }

        public Criteria andSurfheadingIsNull() {
            addCriterion("surfHeading is null");
            return (Criteria) this;
        }

        public Criteria andSurfheadingIsNotNull() {
            addCriterion("surfHeading is not null");
            return (Criteria) this;
        }

        public Criteria andSurfheadingEqualTo(Double value) {
            addCriterion("surfHeading =", value, "surfheading");
            return (Criteria) this;
        }

        public Criteria andSurfheadingNotEqualTo(Double value) {
            addCriterion("surfHeading <>", value, "surfheading");
            return (Criteria) this;
        }

        public Criteria andSurfheadingGreaterThan(Double value) {
            addCriterion("surfHeading >", value, "surfheading");
            return (Criteria) this;
        }

        public Criteria andSurfheadingGreaterThanOrEqualTo(Double value) {
            addCriterion("surfHeading >=", value, "surfheading");
            return (Criteria) this;
        }

        public Criteria andSurfheadingLessThan(Double value) {
            addCriterion("surfHeading <", value, "surfheading");
            return (Criteria) this;
        }

        public Criteria andSurfheadingLessThanOrEqualTo(Double value) {
            addCriterion("surfHeading <=", value, "surfheading");
            return (Criteria) this;
        }

        public Criteria andSurfheadingIn(List<Double> values) {
            addCriterion("surfHeading in", values, "surfheading");
            return (Criteria) this;
        }

        public Criteria andSurfheadingNotIn(List<Double> values) {
            addCriterion("surfHeading not in", values, "surfheading");
            return (Criteria) this;
        }

        public Criteria andSurfheadingBetween(Double value1, Double value2) {
            addCriterion("surfHeading between", value1, value2, "surfheading");
            return (Criteria) this;
        }

        public Criteria andSurfheadingNotBetween(Double value1, Double value2) {
            addCriterion("surfHeading not between", value1, value2, "surfheading");
            return (Criteria) this;
        }

        public Criteria andTrueheadingIsNull() {
            addCriterion("trueHeading is null");
            return (Criteria) this;
        }

        public Criteria andTrueheadingIsNotNull() {
            addCriterion("trueHeading is not null");
            return (Criteria) this;
        }

        public Criteria andTrueheadingEqualTo(Double value) {
            addCriterion("trueHeading =", value, "trueheading");
            return (Criteria) this;
        }

        public Criteria andTrueheadingNotEqualTo(Double value) {
            addCriterion("trueHeading <>", value, "trueheading");
            return (Criteria) this;
        }

        public Criteria andTrueheadingGreaterThan(Double value) {
            addCriterion("trueHeading >", value, "trueheading");
            return (Criteria) this;
        }

        public Criteria andTrueheadingGreaterThanOrEqualTo(Double value) {
            addCriterion("trueHeading >=", value, "trueheading");
            return (Criteria) this;
        }

        public Criteria andTrueheadingLessThan(Double value) {
            addCriterion("trueHeading <", value, "trueheading");
            return (Criteria) this;
        }

        public Criteria andTrueheadingLessThanOrEqualTo(Double value) {
            addCriterion("trueHeading <=", value, "trueheading");
            return (Criteria) this;
        }

        public Criteria andTrueheadingIn(List<Double> values) {
            addCriterion("trueHeading in", values, "trueheading");
            return (Criteria) this;
        }

        public Criteria andTrueheadingNotIn(List<Double> values) {
            addCriterion("trueHeading not in", values, "trueheading");
            return (Criteria) this;
        }

        public Criteria andTrueheadingBetween(Double value1, Double value2) {
            addCriterion("trueHeading between", value1, value2, "trueheading");
            return (Criteria) this;
        }

        public Criteria andTrueheadingNotBetween(Double value1, Double value2) {
            addCriterion("trueHeading not between", value1, value2, "trueheading");
            return (Criteria) this;
        }

        public Criteria andVelocityIsNull() {
            addCriterion("velocity is null");
            return (Criteria) this;
        }

        public Criteria andVelocityIsNotNull() {
            addCriterion("velocity is not null");
            return (Criteria) this;
        }

        public Criteria andVelocityEqualTo(Double value) {
            addCriterion("velocity =", value, "velocity");
            return (Criteria) this;
        }

        public Criteria andVelocityNotEqualTo(Double value) {
            addCriterion("velocity <>", value, "velocity");
            return (Criteria) this;
        }

        public Criteria andVelocityGreaterThan(Double value) {
            addCriterion("velocity >", value, "velocity");
            return (Criteria) this;
        }

        public Criteria andVelocityGreaterThanOrEqualTo(Double value) {
            addCriterion("velocity >=", value, "velocity");
            return (Criteria) this;
        }

        public Criteria andVelocityLessThan(Double value) {
            addCriterion("velocity <", value, "velocity");
            return (Criteria) this;
        }

        public Criteria andVelocityLessThanOrEqualTo(Double value) {
            addCriterion("velocity <=", value, "velocity");
            return (Criteria) this;
        }

        public Criteria andVelocityIn(List<Double> values) {
            addCriterion("velocity in", values, "velocity");
            return (Criteria) this;
        }

        public Criteria andVelocityNotIn(List<Double> values) {
            addCriterion("velocity not in", values, "velocity");
            return (Criteria) this;
        }

        public Criteria andVelocityBetween(Double value1, Double value2) {
            addCriterion("velocity between", value1, value2, "velocity");
            return (Criteria) this;
        }

        public Criteria andVelocityNotBetween(Double value1, Double value2) {
            addCriterion("velocity not between", value1, value2, "velocity");
            return (Criteria) this;
        }

        public Criteria andDepthIsNull() {
            addCriterion("depth is null");
            return (Criteria) this;
        }

        public Criteria andDepthIsNotNull() {
            addCriterion("depth is not null");
            return (Criteria) this;
        }

        public Criteria andDepthEqualTo(Double value) {
            addCriterion("depth =", value, "depth");
            return (Criteria) this;
        }

        public Criteria andDepthNotEqualTo(Double value) {
            addCriterion("depth <>", value, "depth");
            return (Criteria) this;
        }

        public Criteria andDepthGreaterThan(Double value) {
            addCriterion("depth >", value, "depth");
            return (Criteria) this;
        }

        public Criteria andDepthGreaterThanOrEqualTo(Double value) {
            addCriterion("depth >=", value, "depth");
            return (Criteria) this;
        }

        public Criteria andDepthLessThan(Double value) {
            addCriterion("depth <", value, "depth");
            return (Criteria) this;
        }

        public Criteria andDepthLessThanOrEqualTo(Double value) {
            addCriterion("depth <=", value, "depth");
            return (Criteria) this;
        }

        public Criteria andDepthIn(List<Double> values) {
            addCriterion("depth in", values, "depth");
            return (Criteria) this;
        }

        public Criteria andDepthNotIn(List<Double> values) {
            addCriterion("depth not in", values, "depth");
            return (Criteria) this;
        }

        public Criteria andDepthBetween(Double value1, Double value2) {
            addCriterion("depth between", value1, value2, "depth");
            return (Criteria) this;
        }

        public Criteria andDepthNotBetween(Double value1, Double value2) {
            addCriterion("depth not between", value1, value2, "depth");
            return (Criteria) this;
        }

        public Criteria andAwsIsNull() {
            addCriterion("aws is null");
            return (Criteria) this;
        }

        public Criteria andAwsIsNotNull() {
            addCriterion("aws is not null");
            return (Criteria) this;
        }

        public Criteria andAwsEqualTo(Double value) {
            addCriterion("aws =", value, "aws");
            return (Criteria) this;
        }

        public Criteria andAwsNotEqualTo(Double value) {
            addCriterion("aws <>", value, "aws");
            return (Criteria) this;
        }

        public Criteria andAwsGreaterThan(Double value) {
            addCriterion("aws >", value, "aws");
            return (Criteria) this;
        }

        public Criteria andAwsGreaterThanOrEqualTo(Double value) {
            addCriterion("aws >=", value, "aws");
            return (Criteria) this;
        }

        public Criteria andAwsLessThan(Double value) {
            addCriterion("aws <", value, "aws");
            return (Criteria) this;
        }

        public Criteria andAwsLessThanOrEqualTo(Double value) {
            addCriterion("aws <=", value, "aws");
            return (Criteria) this;
        }

        public Criteria andAwsIn(List<Double> values) {
            addCriterion("aws in", values, "aws");
            return (Criteria) this;
        }

        public Criteria andAwsNotIn(List<Double> values) {
            addCriterion("aws not in", values, "aws");
            return (Criteria) this;
        }

        public Criteria andAwsBetween(Double value1, Double value2) {
            addCriterion("aws between", value1, value2, "aws");
            return (Criteria) this;
        }

        public Criteria andAwsNotBetween(Double value1, Double value2) {
            addCriterion("aws not between", value1, value2, "aws");
            return (Criteria) this;
        }

        public Criteria andTwsIsNull() {
            addCriterion("tws is null");
            return (Criteria) this;
        }

        public Criteria andTwsIsNotNull() {
            addCriterion("tws is not null");
            return (Criteria) this;
        }

        public Criteria andTwsEqualTo(Double value) {
            addCriterion("tws =", value, "tws");
            return (Criteria) this;
        }

        public Criteria andTwsNotEqualTo(Double value) {
            addCriterion("tws <>", value, "tws");
            return (Criteria) this;
        }

        public Criteria andTwsGreaterThan(Double value) {
            addCriterion("tws >", value, "tws");
            return (Criteria) this;
        }

        public Criteria andTwsGreaterThanOrEqualTo(Double value) {
            addCriterion("tws >=", value, "tws");
            return (Criteria) this;
        }

        public Criteria andTwsLessThan(Double value) {
            addCriterion("tws <", value, "tws");
            return (Criteria) this;
        }

        public Criteria andTwsLessThanOrEqualTo(Double value) {
            addCriterion("tws <=", value, "tws");
            return (Criteria) this;
        }

        public Criteria andTwsIn(List<Double> values) {
            addCriterion("tws in", values, "tws");
            return (Criteria) this;
        }

        public Criteria andTwsNotIn(List<Double> values) {
            addCriterion("tws not in", values, "tws");
            return (Criteria) this;
        }

        public Criteria andTwsBetween(Double value1, Double value2) {
            addCriterion("tws between", value1, value2, "tws");
            return (Criteria) this;
        }

        public Criteria andTwsNotBetween(Double value1, Double value2) {
            addCriterion("tws not between", value1, value2, "tws");
            return (Criteria) this;
        }

        public Criteria andAwdIsNull() {
            addCriterion("awd is null");
            return (Criteria) this;
        }

        public Criteria andAwdIsNotNull() {
            addCriterion("awd is not null");
            return (Criteria) this;
        }

        public Criteria andAwdEqualTo(Double value) {
            addCriterion("awd =", value, "awd");
            return (Criteria) this;
        }

        public Criteria andAwdNotEqualTo(Double value) {
            addCriterion("awd <>", value, "awd");
            return (Criteria) this;
        }

        public Criteria andAwdGreaterThan(Double value) {
            addCriterion("awd >", value, "awd");
            return (Criteria) this;
        }

        public Criteria andAwdGreaterThanOrEqualTo(Double value) {
            addCriterion("awd >=", value, "awd");
            return (Criteria) this;
        }

        public Criteria andAwdLessThan(Double value) {
            addCriterion("awd <", value, "awd");
            return (Criteria) this;
        }

        public Criteria andAwdLessThanOrEqualTo(Double value) {
            addCriterion("awd <=", value, "awd");
            return (Criteria) this;
        }

        public Criteria andAwdIn(List<Double> values) {
            addCriterion("awd in", values, "awd");
            return (Criteria) this;
        }

        public Criteria andAwdNotIn(List<Double> values) {
            addCriterion("awd not in", values, "awd");
            return (Criteria) this;
        }

        public Criteria andAwdBetween(Double value1, Double value2) {
            addCriterion("awd between", value1, value2, "awd");
            return (Criteria) this;
        }

        public Criteria andAwdNotBetween(Double value1, Double value2) {
            addCriterion("awd not between", value1, value2, "awd");
            return (Criteria) this;
        }

        public Criteria andTwdIsNull() {
            addCriterion("twd is null");
            return (Criteria) this;
        }

        public Criteria andTwdIsNotNull() {
            addCriterion("twd is not null");
            return (Criteria) this;
        }

        public Criteria andTwdEqualTo(Double value) {
            addCriterion("twd =", value, "twd");
            return (Criteria) this;
        }

        public Criteria andTwdNotEqualTo(Double value) {
            addCriterion("twd <>", value, "twd");
            return (Criteria) this;
        }

        public Criteria andTwdGreaterThan(Double value) {
            addCriterion("twd >", value, "twd");
            return (Criteria) this;
        }

        public Criteria andTwdGreaterThanOrEqualTo(Double value) {
            addCriterion("twd >=", value, "twd");
            return (Criteria) this;
        }

        public Criteria andTwdLessThan(Double value) {
            addCriterion("twd <", value, "twd");
            return (Criteria) this;
        }

        public Criteria andTwdLessThanOrEqualTo(Double value) {
            addCriterion("twd <=", value, "twd");
            return (Criteria) this;
        }

        public Criteria andTwdIn(List<Double> values) {
            addCriterion("twd in", values, "twd");
            return (Criteria) this;
        }

        public Criteria andTwdNotIn(List<Double> values) {
            addCriterion("twd not in", values, "twd");
            return (Criteria) this;
        }

        public Criteria andTwdBetween(Double value1, Double value2) {
            addCriterion("twd between", value1, value2, "twd");
            return (Criteria) this;
        }

        public Criteria andTwdNotBetween(Double value1, Double value2) {
            addCriterion("twd not between", value1, value2, "twd");
            return (Criteria) this;
        }

        public Criteria andAirtemperatureIsNull() {
            addCriterion("airTemperature is null");
            return (Criteria) this;
        }

        public Criteria andAirtemperatureIsNotNull() {
            addCriterion("airTemperature is not null");
            return (Criteria) this;
        }

        public Criteria andAirtemperatureEqualTo(Double value) {
            addCriterion("airTemperature =", value, "airtemperature");
            return (Criteria) this;
        }

        public Criteria andAirtemperatureNotEqualTo(Double value) {
            addCriterion("airTemperature <>", value, "airtemperature");
            return (Criteria) this;
        }

        public Criteria andAirtemperatureGreaterThan(Double value) {
            addCriterion("airTemperature >", value, "airtemperature");
            return (Criteria) this;
        }

        public Criteria andAirtemperatureGreaterThanOrEqualTo(Double value) {
            addCriterion("airTemperature >=", value, "airtemperature");
            return (Criteria) this;
        }

        public Criteria andAirtemperatureLessThan(Double value) {
            addCriterion("airTemperature <", value, "airtemperature");
            return (Criteria) this;
        }

        public Criteria andAirtemperatureLessThanOrEqualTo(Double value) {
            addCriterion("airTemperature <=", value, "airtemperature");
            return (Criteria) this;
        }

        public Criteria andAirtemperatureIn(List<Double> values) {
            addCriterion("airTemperature in", values, "airtemperature");
            return (Criteria) this;
        }

        public Criteria andAirtemperatureNotIn(List<Double> values) {
            addCriterion("airTemperature not in", values, "airtemperature");
            return (Criteria) this;
        }

        public Criteria andAirtemperatureBetween(Double value1, Double value2) {
            addCriterion("airTemperature between", value1, value2, "airtemperature");
            return (Criteria) this;
        }

        public Criteria andAirtemperatureNotBetween(Double value1, Double value2) {
            addCriterion("airTemperature not between", value1, value2, "airtemperature");
            return (Criteria) this;
        }

        public Criteria andAtmpressureIsNull() {
            addCriterion("atmPressure is null");
            return (Criteria) this;
        }

        public Criteria andAtmpressureIsNotNull() {
            addCriterion("atmPressure is not null");
            return (Criteria) this;
        }

        public Criteria andAtmpressureEqualTo(Double value) {
            addCriterion("atmPressure =", value, "atmpressure");
            return (Criteria) this;
        }

        public Criteria andAtmpressureNotEqualTo(Double value) {
            addCriterion("atmPressure <>", value, "atmpressure");
            return (Criteria) this;
        }

        public Criteria andAtmpressureGreaterThan(Double value) {
            addCriterion("atmPressure >", value, "atmpressure");
            return (Criteria) this;
        }

        public Criteria andAtmpressureGreaterThanOrEqualTo(Double value) {
            addCriterion("atmPressure >=", value, "atmpressure");
            return (Criteria) this;
        }

        public Criteria andAtmpressureLessThan(Double value) {
            addCriterion("atmPressure <", value, "atmpressure");
            return (Criteria) this;
        }

        public Criteria andAtmpressureLessThanOrEqualTo(Double value) {
            addCriterion("atmPressure <=", value, "atmpressure");
            return (Criteria) this;
        }

        public Criteria andAtmpressureIn(List<Double> values) {
            addCriterion("atmPressure in", values, "atmpressure");
            return (Criteria) this;
        }

        public Criteria andAtmpressureNotIn(List<Double> values) {
            addCriterion("atmPressure not in", values, "atmpressure");
            return (Criteria) this;
        }

        public Criteria andAtmpressureBetween(Double value1, Double value2) {
            addCriterion("atmPressure between", value1, value2, "atmpressure");
            return (Criteria) this;
        }

        public Criteria andAtmpressureNotBetween(Double value1, Double value2) {
            addCriterion("atmPressure not between", value1, value2, "atmpressure");
            return (Criteria) this;
        }

        public Criteria andHumidityIsNull() {
            addCriterion("humidity is null");
            return (Criteria) this;
        }

        public Criteria andHumidityIsNotNull() {
            addCriterion("humidity is not null");
            return (Criteria) this;
        }

        public Criteria andHumidityEqualTo(Double value) {
            addCriterion("humidity =", value, "humidity");
            return (Criteria) this;
        }

        public Criteria andHumidityNotEqualTo(Double value) {
            addCriterion("humidity <>", value, "humidity");
            return (Criteria) this;
        }

        public Criteria andHumidityGreaterThan(Double value) {
            addCriterion("humidity >", value, "humidity");
            return (Criteria) this;
        }

        public Criteria andHumidityGreaterThanOrEqualTo(Double value) {
            addCriterion("humidity >=", value, "humidity");
            return (Criteria) this;
        }

        public Criteria andHumidityLessThan(Double value) {
            addCriterion("humidity <", value, "humidity");
            return (Criteria) this;
        }

        public Criteria andHumidityLessThanOrEqualTo(Double value) {
            addCriterion("humidity <=", value, "humidity");
            return (Criteria) this;
        }

        public Criteria andHumidityIn(List<Double> values) {
            addCriterion("humidity in", values, "humidity");
            return (Criteria) this;
        }

        public Criteria andHumidityNotIn(List<Double> values) {
            addCriterion("humidity not in", values, "humidity");
            return (Criteria) this;
        }

        public Criteria andHumidityBetween(Double value1, Double value2) {
            addCriterion("humidity between", value1, value2, "humidity");
            return (Criteria) this;
        }

        public Criteria andHumidityNotBetween(Double value1, Double value2) {
            addCriterion("humidity not between", value1, value2, "humidity");
            return (Criteria) this;
        }

        public Criteria andSunpowerIsNull() {
            addCriterion("sunPower is null");
            return (Criteria) this;
        }

        public Criteria andSunpowerIsNotNull() {
            addCriterion("sunPower is not null");
            return (Criteria) this;
        }

        public Criteria andSunpowerEqualTo(Double value) {
            addCriterion("sunPower =", value, "sunpower");
            return (Criteria) this;
        }

        public Criteria andSunpowerNotEqualTo(Double value) {
            addCriterion("sunPower <>", value, "sunpower");
            return (Criteria) this;
        }

        public Criteria andSunpowerGreaterThan(Double value) {
            addCriterion("sunPower >", value, "sunpower");
            return (Criteria) this;
        }

        public Criteria andSunpowerGreaterThanOrEqualTo(Double value) {
            addCriterion("sunPower >=", value, "sunpower");
            return (Criteria) this;
        }

        public Criteria andSunpowerLessThan(Double value) {
            addCriterion("sunPower <", value, "sunpower");
            return (Criteria) this;
        }

        public Criteria andSunpowerLessThanOrEqualTo(Double value) {
            addCriterion("sunPower <=", value, "sunpower");
            return (Criteria) this;
        }

        public Criteria andSunpowerIn(List<Double> values) {
            addCriterion("sunPower in", values, "sunpower");
            return (Criteria) this;
        }

        public Criteria andSunpowerNotIn(List<Double> values) {
            addCriterion("sunPower not in", values, "sunpower");
            return (Criteria) this;
        }

        public Criteria andSunpowerBetween(Double value1, Double value2) {
            addCriterion("sunPower between", value1, value2, "sunpower");
            return (Criteria) this;
        }

        public Criteria andSunpowerNotBetween(Double value1, Double value2) {
            addCriterion("sunPower not between", value1, value2, "sunpower");
            return (Criteria) this;
        }

        public Criteria andWatertemperatureIsNull() {
            addCriterion("waterTemperature is null");
            return (Criteria) this;
        }

        public Criteria andWatertemperatureIsNotNull() {
            addCriterion("waterTemperature is not null");
            return (Criteria) this;
        }

        public Criteria andWatertemperatureEqualTo(Double value) {
            addCriterion("waterTemperature =", value, "watertemperature");
            return (Criteria) this;
        }

        public Criteria andWatertemperatureNotEqualTo(Double value) {
            addCriterion("waterTemperature <>", value, "watertemperature");
            return (Criteria) this;
        }

        public Criteria andWatertemperatureGreaterThan(Double value) {
            addCriterion("waterTemperature >", value, "watertemperature");
            return (Criteria) this;
        }

        public Criteria andWatertemperatureGreaterThanOrEqualTo(Double value) {
            addCriterion("waterTemperature >=", value, "watertemperature");
            return (Criteria) this;
        }

        public Criteria andWatertemperatureLessThan(Double value) {
            addCriterion("waterTemperature <", value, "watertemperature");
            return (Criteria) this;
        }

        public Criteria andWatertemperatureLessThanOrEqualTo(Double value) {
            addCriterion("waterTemperature <=", value, "watertemperature");
            return (Criteria) this;
        }

        public Criteria andWatertemperatureIn(List<Double> values) {
            addCriterion("waterTemperature in", values, "watertemperature");
            return (Criteria) this;
        }

        public Criteria andWatertemperatureNotIn(List<Double> values) {
            addCriterion("waterTemperature not in", values, "watertemperature");
            return (Criteria) this;
        }

        public Criteria andWatertemperatureBetween(Double value1, Double value2) {
            addCriterion("waterTemperature between", value1, value2, "watertemperature");
            return (Criteria) this;
        }

        public Criteria andWatertemperatureNotBetween(Double value1, Double value2) {
            addCriterion("waterTemperature not between", value1, value2, "watertemperature");
            return (Criteria) this;
        }

        public Criteria andSalinityIsNull() {
            addCriterion("salinity is null");
            return (Criteria) this;
        }

        public Criteria andSalinityIsNotNull() {
            addCriterion("salinity is not null");
            return (Criteria) this;
        }

        public Criteria andSalinityEqualTo(Double value) {
            addCriterion("salinity =", value, "salinity");
            return (Criteria) this;
        }

        public Criteria andSalinityNotEqualTo(Double value) {
            addCriterion("salinity <>", value, "salinity");
            return (Criteria) this;
        }

        public Criteria andSalinityGreaterThan(Double value) {
            addCriterion("salinity >", value, "salinity");
            return (Criteria) this;
        }

        public Criteria andSalinityGreaterThanOrEqualTo(Double value) {
            addCriterion("salinity >=", value, "salinity");
            return (Criteria) this;
        }

        public Criteria andSalinityLessThan(Double value) {
            addCriterion("salinity <", value, "salinity");
            return (Criteria) this;
        }

        public Criteria andSalinityLessThanOrEqualTo(Double value) {
            addCriterion("salinity <=", value, "salinity");
            return (Criteria) this;
        }

        public Criteria andSalinityIn(List<Double> values) {
            addCriterion("salinity in", values, "salinity");
            return (Criteria) this;
        }

        public Criteria andSalinityNotIn(List<Double> values) {
            addCriterion("salinity not in", values, "salinity");
            return (Criteria) this;
        }

        public Criteria andSalinityBetween(Double value1, Double value2) {
            addCriterion("salinity between", value1, value2, "salinity");
            return (Criteria) this;
        }

        public Criteria andSalinityNotBetween(Double value1, Double value2) {
            addCriterion("salinity not between", value1, value2, "salinity");
            return (Criteria) this;
        }

        public Criteria andO2IsNull() {
            addCriterion("o2 is null");
            return (Criteria) this;
        }

        public Criteria andO2IsNotNull() {
            addCriterion("o2 is not null");
            return (Criteria) this;
        }

        public Criteria andO2EqualTo(Double value) {
            addCriterion("o2 =", value, "o2");
            return (Criteria) this;
        }

        public Criteria andO2NotEqualTo(Double value) {
            addCriterion("o2 <>", value, "o2");
            return (Criteria) this;
        }

        public Criteria andO2GreaterThan(Double value) {
            addCriterion("o2 >", value, "o2");
            return (Criteria) this;
        }

        public Criteria andO2GreaterThanOrEqualTo(Double value) {
            addCriterion("o2 >=", value, "o2");
            return (Criteria) this;
        }

        public Criteria andO2LessThan(Double value) {
            addCriterion("o2 <", value, "o2");
            return (Criteria) this;
        }

        public Criteria andO2LessThanOrEqualTo(Double value) {
            addCriterion("o2 <=", value, "o2");
            return (Criteria) this;
        }

        public Criteria andO2In(List<Double> values) {
            addCriterion("o2 in", values, "o2");
            return (Criteria) this;
        }

        public Criteria andO2NotIn(List<Double> values) {
            addCriterion("o2 not in", values, "o2");
            return (Criteria) this;
        }

        public Criteria andO2Between(Double value1, Double value2) {
            addCriterion("o2 between", value1, value2, "o2");
            return (Criteria) this;
        }

        public Criteria andO2NotBetween(Double value1, Double value2) {
            addCriterion("o2 not between", value1, value2, "o2");
            return (Criteria) this;
        }

        public Criteria andMissionnameIsNull() {
            addCriterion("missionName is null");
            return (Criteria) this;
        }

        public Criteria andMissionnameIsNotNull() {
            addCriterion("missionName is not null");
            return (Criteria) this;
        }

        public Criteria andMissionnameEqualTo(String value) {
            addCriterion("missionName =", value, "missionname");
            return (Criteria) this;
        }

        public Criteria andMissionnameNotEqualTo(String value) {
            addCriterion("missionName <>", value, "missionname");
            return (Criteria) this;
        }

        public Criteria andMissionnameGreaterThan(String value) {
            addCriterion("missionName >", value, "missionname");
            return (Criteria) this;
        }

        public Criteria andMissionnameGreaterThanOrEqualTo(String value) {
            addCriterion("missionName >=", value, "missionname");
            return (Criteria) this;
        }

        public Criteria andMissionnameLessThan(String value) {
            addCriterion("missionName <", value, "missionname");
            return (Criteria) this;
        }

        public Criteria andMissionnameLessThanOrEqualTo(String value) {
            addCriterion("missionName <=", value, "missionname");
            return (Criteria) this;
        }

        public Criteria andMissionnameLike(String value) {
            addCriterion("missionName like", value, "missionname");
            return (Criteria) this;
        }

        public Criteria andMissionnameNotLike(String value) {
            addCriterion("missionName not like", value, "missionname");
            return (Criteria) this;
        }

        public Criteria andMissionnameIn(List<String> values) {
            addCriterion("missionName in", values, "missionname");
            return (Criteria) this;
        }

        public Criteria andMissionnameNotIn(List<String> values) {
            addCriterion("missionName not in", values, "missionname");
            return (Criteria) this;
        }

        public Criteria andMissionnameBetween(String value1, String value2) {
            addCriterion("missionName between", value1, value2, "missionname");
            return (Criteria) this;
        }

        public Criteria andMissionnameNotBetween(String value1, String value2) {
            addCriterion("missionName not between", value1, value2, "missionname");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table data_table
     *
     * @mbg.generated do_not_delete_during_merge Sun Dec 06 16:12:51 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table data_table
     *
     * @mbg.generated Sun Dec 06 16:12:51 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}